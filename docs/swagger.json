{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/audios": {
            "post": {
                "description": "Adds a new audio file's metadata to the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Add audio",
                "parameters": [
                    {
                        "description": "Audio object",
                        "name": "audio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Audio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/generate-upload-url": {
            "get": {
                "description": "Generates a presigned URL to upload an audio file to the storage service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Generate presigned upload URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file to be uploaded",
                        "name": "file_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MIME type of the file (e.g., audio/mpeg)",
                        "name": "file_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/user/{user_id}": {
            "get": {
                "description": "Retrieves all audio files belonging to a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "List audios by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Audio"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/video/{video_id}": {
            "get": {
                "description": "Retrieves all audio files belonging to a specific video.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "List audios by video ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Audio"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/{audioID}/download-url": {
            "get": {
                "description": "Generates a presigned URL to download an audio file from the storage service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Generate presigned download URL",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the audio file",
                        "name": "audioID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/{audioID}/user/{userID}": {
            "get": {
                "description": "Retrieves an audio file for a specific user and generates a presigned download URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Get audio by user and audio ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the audio file",
                        "name": "audioID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audio, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/{audioID}/video/{videoID}": {
            "get": {
                "description": "Retrieves an audio file for a specific video and generates a presigned download URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Get audio by video and audio ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the audio file",
                        "name": "audioID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "videoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audio, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/{audio_id}": {
            "get": {
                "description": "Retrieves an audio file's metadata and generates a presigned download URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audios"
                ],
                "summary": "Get audio by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the audio file",
                        "name": "audio_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "audio, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/audios/{id}": {
            "delete": {
                "description": "Deletes an audio file from the system.",
                "tags": [
                    "audios"
                ],
                "summary": "Delete audio by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the audio file",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions": {
            "post": {
                "description": "Adds a new transcription file's metadata to the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Add transcription",
                "parameters": [
                    {
                        "description": "Transcription object",
                        "name": "transcription",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Transcription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/generate-upload-url": {
            "post": {
                "description": "Generates a presigned URL to upload a transcription file to the storage service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Generate presigned upload URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the file to be uploaded",
                        "name": "file_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "MIME type of the file (e.g., application/json)",
                        "name": "file_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/user/{user_id}": {
            "get": {
                "description": "Retrieves all transcriptions belonging to a specific user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "List transcriptions by User ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transcriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Transcription"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/video/{video_id}": {
            "get": {
                "description": "Retrieves all transcriptions belonging to a specific video.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "List transcriptions by Video ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transcriptions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Transcription"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/{transcriptionID}/user/{userID}": {
            "get": {
                "description": "Retrieves a transcription for a specific user and generates a presigned download URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Get transcription by User ID and transcription ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the transcription file",
                        "name": "transcriptionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transcription, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/{transcriptionID}/video/{videoID}": {
            "get": {
                "description": "Retrieves a transcription for a specific video and generates a presigned download URL.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Get transcription by Video ID and transcription ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the transcription file",
                        "name": "transcriptionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "videoID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transcription, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/{transcription_id}": {
            "get": {
                "description": "Retrieves a transcription and generates a presigned download URL for it.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Get transcription by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the transcription file",
                        "name": "transcription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "transcription, download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a transcription record from the system.",
                "tags": [
                    "transcriptions"
                ],
                "summary": "Delete transcription by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the transcription file",
                        "name": "transcription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/transcriptions/{transcription_id}/download-url": {
            "get": {
                "description": "Generates a presigned URL to download a transcription file from the storage service.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transcriptions"
                ],
                "summary": "Generate presigned download URL",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the transcription file",
                        "name": "transcription_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieves a list of all users in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.User"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Logs in a user with their email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Email and password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Creates a new user in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "description": "Fetches a user's details by their ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the user's information, excluding the avatar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Soft deletes a user by updating their status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/avatar": {
            "get": {
                "description": "Redirects the client to the presigned URL to download the user's avatar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Load user avatar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "307": {
                        "description": "Redirects to avatar URL",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/avatar-download-url": {
            "get": {
                "description": "Generates a presigned URL to download the user's avatar from S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get presigned URL for avatar download",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "avatar_download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/change-password": {
            "put": {
                "description": "Allows a user to change their password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Old and new password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/update-avatar": {
            "put": {
                "description": "Generates a presigned URL for uploading the user's avatar",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user avatar",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Folder for avatar storage",
                        "name": "folder",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File name for avatar",
                        "name": "file_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "avatar_upload_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos": {
            "post": {
                "description": "Creates a new video record in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Add a new video",
                "parameters": [
                    {
                        "description": "Video data",
                        "name": "video",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Video"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/upload-url/image": {
            "post": {
                "description": "Generates a presigned URL to upload an image (e.g., thumbnail) to S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Generate presigned upload URL for an image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the image file",
                        "name": "file_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of the image file (e.g., image/jpeg)",
                        "name": "file_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/upload-url/video": {
            "post": {
                "description": "Generates a presigned URL to upload a video file to S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Generate presigned upload URL for a video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the video file",
                        "name": "file_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Type of the video file (e.g., video/mp4)",
                        "name": "file_type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/user/{user_id}": {
            "get": {
                "description": "Fetches all videos for a specific user along with presigned image URLs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "List videos by user ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "videos, frames",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/{video_id}": {
            "get": {
                "description": "Fetches a video by its ID and generates presigned URLs for the video and image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Get video by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "video, video_url, image_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a video by its ID from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Delete a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/{video_id}/download-url/image": {
            "get": {
                "description": "Generates a presigned URL to download an image (e.g., thumbnail) from S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Generate presigned download URL for an image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video file",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "image_download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/{video_id}/download-url/video": {
            "get": {
                "description": "Generates a presigned URL to download a video file from S3",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videos"
                ],
                "summary": "Generate presigned download URL for a video",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the video file",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "video_download_url",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Audio": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamp of when the audio was uploaded",
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of the audio in seconds",
                    "type": "integer"
                },
                "file_name": {
                    "description": "The audio file name in S3",
                    "type": "string"
                },
                "folder": {
                    "description": "S3 folder or path containing the audio file",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "description": "Language of the audio (e.g., \"en\", \"es\", etc.)",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp of the last update to the audio",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user who uploaded the audio",
                    "type": "integer"
                },
                "video_id": {
                    "description": "ID of the related video",
                    "type": "integer"
                }
            }
        },
        "entity.Transcription": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamp of when the transcription was created",
                    "type": "string"
                },
                "file_name": {
                    "description": "The transcription file name in S3",
                    "type": "string"
                },
                "folder": {
                    "description": "S3 folder or path containing the transcription file",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lang": {
                    "description": "Language of the transcription (e.g., \"en\", \"es\", etc.)",
                    "type": "string"
                },
                "text": {
                    "description": "The transcription text",
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp of the last update to the transcription",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user who created the transcription",
                    "type": "integer"
                },
                "video_id": {
                    "description": "ID of the related video",
                    "type": "integer"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "file name",
                    "type": "string"
                },
                "avatar_folder": {
                    "description": "Folder that contain the avatar image on s3",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamp of when the user was created",
                    "type": "string"
                },
                "email": {
                    "description": "User's email address",
                    "type": "string"
                },
                "first_name": {
                    "description": "User's first name",
                    "type": "string"
                },
                "id": {
                    "description": "Unique identifier for the user",
                    "type": "integer"
                },
                "last_name": {
                    "description": "User's last name\\",
                    "type": "string"
                },
                "password": {
                    "description": "User's hashed password",
                    "type": "string"
                },
                "premium": {
                    "type": "boolean"
                },
                "role": {
                    "description": "Role of the user (User, Admin, etc.)",
                    "type": "string"
                },
                "status": {
                    "description": "Status of the user (available, suspended, deleted)",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "Timestamp of the last update to the user's data",
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "entity.Video": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "Timestamp of when the video was created",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "description": "Duration of the video in seconds",
                    "type": "integer"
                },
                "file_name": {
                    "type": "string"
                },
                "folder": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "Timestamp of the last update to the video",
                    "type": "string"
                },
                "user_id": {
                    "description": "ID of the user who uploaded the video",
                    "type": "integer"
                }
            }
        }
    }
}