definitions:
  entity.Audio:
    properties:
      created_at:
        description: Timestamp of when the audio was uploaded
        type: string
      duration:
        description: Duration of the audio in seconds
        type: integer
      file_name:
        description: The audio file name in S3
        type: string
      folder:
        description: S3 folder or path containing the audio file
        type: string
      id:
        type: integer
      lang:
        description: Language of the audio (e.g., "en", "es", etc.)
        type: string
      updated_at:
        description: Timestamp of the last update to the audio
        type: string
      user_id:
        description: ID of the user who uploaded the audio
        type: integer
      video_id:
        description: ID of the related video
        type: integer
    type: object
  entity.Transcription:
    properties:
      created_at:
        description: Timestamp of when the transcription was created
        type: string
      file_name:
        description: The transcription file name in S3
        type: string
      folder:
        description: S3 folder or path containing the transcription file
        type: string
      id:
        type: integer
      lang:
        description: Language of the transcription (e.g., "en", "es", etc.)
        type: string
      text:
        description: The transcription text
        type: string
      updated_at:
        description: Timestamp of the last update to the transcription
        type: string
      user_id:
        description: ID of the user who created the transcription
        type: integer
      video_id:
        description: ID of the related video
        type: integer
    type: object
  entity.User:
    properties:
      avatar:
        description: file name
        type: string
      avatar_folder:
        description: Folder that contain the avatar image on s3
        type: string
      created_at:
        description: Timestamp of when the user was created
        type: string
      email:
        description: User's email address
        type: string
      first_name:
        description: User's first name
        type: string
      id:
        description: Unique identifier for the user
        type: integer
      last_name:
        description: User's last name\
        type: string
      password:
        description: User's hashed password
        type: string
      premium:
        type: boolean
      role:
        description: Role of the user (User, Admin, etc.)
        type: string
      status:
        description: Status of the user (available, suspended, deleted)
        type: integer
      updated_at:
        description: Timestamp of the last update to the user's data
        type: string
      username:
        type: string
    type: object
  entity.Video:
    properties:
      created_at:
        description: Timestamp of when the video was created
        type: string
      description:
        type: string
      duration:
        description: Duration of the video in seconds
        type: integer
      file_name:
        type: string
      folder:
        type: string
      id:
        type: integer
      image:
        type: string
      status:
        $ref: '#/definitions/entity.VideoStatus'
      title:
        type: string
      updated_at:
        description: Timestamp of the last update to the video
        type: string
      user_id:
        description: ID of the user who uploaded the video
        type: integer
    type: object
  entity.VideoStatus:
    enum:
    - raw
    - processing
    - failed
    - success
    type: string
    x-enum-varnames:
    - StatusRaw
    - StatusProcessing
    - StatusFailed
    - StatusSuccess
  handler.UpdateVideoStatusRequest:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/entity.VideoStatus'
        enum:
        - raw
        - processing
        - failed
        - success
    required:
    - status
    type: object
  response.AudioResponse:
    properties:
      audio:
        $ref: '#/definitions/entity.Audio'
      download_url:
        type: string
    type: object
  response.AudiosResponse:
    properties:
      audios:
        items:
          $ref: '#/definitions/entity.Audio'
        type: array
    type: object
  response.AvatarDownloadURLResponse:
    properties:
      avatar_download_url:
        type: string
    type: object
  response.AvatarUploadURLResponse:
    properties:
      avatar_upload_url:
        type: string
    type: object
  response.DownloadURLResponse:
    properties:
      download_url:
        type: string
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  response.MessageResponse:
    properties:
      message:
        type: string
    type: object
  response.StatusResponse:
    properties:
      status:
        $ref: '#/definitions/entity.VideoStatus'
    type: object
  response.TokenResponse:
    properties:
      token:
        type: string
    type: object
  response.TranscriptionResponse:
    properties:
      download_url:
        type: string
      transcription:
        $ref: '#/definitions/entity.Transcription'
    type: object
  response.TranscriptionsResponse:
    properties:
      transcriptions:
        items:
          $ref: '#/definitions/entity.Transcription'
        type: array
    type: object
  response.UploadURLResponse:
    properties:
      upload_url:
        type: string
    type: object
  response.UserResponse:
    properties:
      user:
        $ref: '#/definitions/entity.User'
    type: object
  response.UsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/entity.User'
        type: array
    type: object
info:
  contact: {}
paths:
  /audios:
    post:
      consumes:
      - application/json
      description: Adds a new audio file's metadata to the system.
      parameters:
      - description: Audio object
        in: body
        name: audio
        required: true
        schema:
          $ref: '#/definitions/entity.Audio'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Add audio
      tags:
      - audios
  /audios/{audio_id}:
    delete:
      description: Deletes an audio file from the system.
      parameters:
      - description: ID of the audio file
        in: path
        name: audio_id
        required: true
        type: integer
      responses:
        "200":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete audio by ID
      tags:
      - audios
    get:
      description: Retrieves an audio file's metadata and generates a presigned download
        URL.
      parameters:
      - description: ID of the audio file
        in: path
        name: audio_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: audio, download_url
          schema:
            $ref: '#/definitions/response.AudioResponse'
        "404":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get audio by ID
      tags:
      - audios
  /audios/{audio_id}/download-url:
    get:
      description: Generates a presigned URL to download an audio file from the storage
        service.
      parameters:
      - description: ID of the audio file
        in: path
        name: audio_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: download_url
          schema:
            $ref: '#/definitions/response.DownloadURLResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned download URL
      tags:
      - audios
  /audios/{audioID}/user/{userID}:
    get:
      description: Retrieves an audio file for a specific user and generates a presigned
        download URL.
      parameters:
      - description: ID of the audio file
        in: path
        name: audioID
        required: true
        type: integer
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: audio, download_url
          schema:
            $ref: '#/definitions/response.AudioResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get audio by user and audio ID
      tags:
      - audios
  /audios/{audioID}/video/{videoID}:
    get:
      description: Retrieves an audio file for a specific video and generates a presigned
        download URL.
      parameters:
      - description: ID of the audio file
        in: path
        name: audioID
        required: true
        type: integer
      - description: ID of the video
        in: path
        name: videoID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: audio, download_url
          schema:
            $ref: '#/definitions/response.AudioResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get audio by video and audio ID
      tags:
      - audios
  /audios/generate-upload-url:
    get:
      description: Generates a presigned URL to upload an audio file to the storage
        service.
      parameters:
      - description: Name of the file to be uploaded
        in: query
        name: file_name
        required: true
        type: string
      - description: MIME type of the file (e.g., audio/mpeg)
        in: query
        name: file_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: upload_url
          schema:
            $ref: '#/definitions/response.UploadURLResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned upload URL
      tags:
      - audios
  /audios/user/{user_id}:
    get:
      description: Retrieves all audio files belonging to a specific user.
      parameters:
      - description: ID of the user
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: audios
          schema:
            $ref: '#/definitions/response.AudiosResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List audios by user ID
      tags:
      - audios
  /audios/video/{video_id}:
    get:
      description: Retrieves all audio files belonging to a specific video.
      parameters:
      - description: ID of the video
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: audios
          schema:
            $ref: '#/definitions/response.AudiosResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List audios by Video ID
      tags:
      - audios
  /transcriptions:
    post:
      consumes:
      - application/json
      description: Adds a new transcription file's metadata to the system.
      parameters:
      - description: Transcription object
        in: body
        name: transcription
        required: true
        schema:
          $ref: '#/definitions/entity.Transcription'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Add transcription
      tags:
      - transcriptions
  /transcriptions/{transcription_id}:
    delete:
      description: Deletes a transcription record from the system.
      parameters:
      - description: ID of the transcription file
        in: path
        name: transcription_id
        required: true
        type: integer
      responses:
        "200":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete transcription by ID
      tags:
      - transcriptions
    get:
      description: Retrieves a transcription and generates a presigned download URL
        for it.
      parameters:
      - description: ID of the transcription file
        in: path
        name: transcription_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: transcription, download_url
          schema:
            $ref: '#/definitions/response.TranscriptionResponse'
        "404":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get transcription by ID
      tags:
      - transcriptions
  /transcriptions/{transcription_id}/download-url:
    get:
      description: Generates a presigned URL to download a transcription file from
        the storage service.
      parameters:
      - description: ID of the transcription file
        in: path
        name: transcription_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: download_url
          schema:
            $ref: '#/definitions/response.DownloadURLResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned download URL
      tags:
      - transcriptions
  /transcriptions/{transcriptionID}/user/{userID}:
    get:
      description: Retrieves a transcription for a specific user and generates a presigned
        download URL.
      parameters:
      - description: ID of the transcription file
        in: path
        name: transcriptionID
        required: true
        type: integer
      - description: ID of the user
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: transcription, download_url
          schema:
            $ref: '#/definitions/response.TranscriptionResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get transcription by User ID and transcription ID
      tags:
      - transcriptions
  /transcriptions/{transcriptionID}/video/{videoID}:
    get:
      description: Retrieves a transcription for a specific video and generates a
        presigned download URL.
      parameters:
      - description: ID of the transcription file
        in: path
        name: transcriptionID
        required: true
        type: integer
      - description: ID of the video
        in: path
        name: videoID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: transcription, download_url
          schema:
            $ref: '#/definitions/response.TranscriptionResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get transcription by Video ID and transcription ID
      tags:
      - transcriptions
  /transcriptions/generate-upload-url:
    post:
      description: Generates a presigned URL to upload a transcription file to the
        storage service.
      parameters:
      - description: Name of the file to be uploaded
        in: query
        name: file_name
        required: true
        type: string
      - description: MIME type of the file (e.g., application/json)
        in: query
        name: file_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: upload_url
          schema:
            $ref: '#/definitions/response.UploadURLResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned upload URL
      tags:
      - transcriptions
  /transcriptions/user/{user_id}:
    get:
      description: Retrieves all transcriptions belonging to a specific user.
      parameters:
      - description: ID of the user
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: transcriptions
          schema:
            $ref: '#/definitions/response.TranscriptionsResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List transcriptions by User ID
      tags:
      - transcriptions
  /transcriptions/video/{video_id}:
    get:
      description: Retrieves all transcriptions belonging to a specific video.
      parameters:
      - description: ID of the video
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: transcriptions
          schema:
            $ref: '#/definitions/response.TranscriptionsResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List transcriptions by Video ID
      tags:
      - transcriptions
  /users:
    get:
      description: Retrieves a list of all users in the system
      produces:
      - application/json
      responses:
        "200":
          description: users
          schema:
            $ref: '#/definitions/response.UsersResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all users
      tags:
      - users
  /users/{user_id}:
    delete:
      description: Soft deletes a user by updating their status
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete user
      tags:
      - users
    get:
      description: Fetches a user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            $ref: '#/definitions/response.UserResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates the user's information, excluding the avatar
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update user information
      tags:
      - users
  /users/{user_id}/avatar:
    get:
      description: Redirects the client to the presigned URL to download the user's
        avatar
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "307":
          description: Redirects to avatar URL
          schema:
            type: string
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Load user avatar
      tags:
      - users
  /users/{user_id}/avatar-download-url:
    get:
      description: Generates a presigned URL to download the user's avatar from S3
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: avatar_download_url
          schema:
            $ref: '#/definitions/response.AvatarDownloadURLResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get presigned URL for avatar download
      tags:
      - users
  /users/{user_id}/change-password:
    put:
      consumes:
      - application/json
      description: Allows a user to change their password
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: Old and new password
        in: body
        name: password
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Change user password
      tags:
      - users
  /users/{user_id}/update-avatar:
    put:
      description: Generates a presigned URL for uploading the user's avatar
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: File name for avatar
        in: query
        name: file_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: avatar_upload_url
          schema:
            $ref: '#/definitions/response.AvatarUploadURLResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update user avatar
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Logs in a user with their email and password
      parameters:
      - description: Email and password
        in: body
        name: credentials
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User login
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Creates a new user in the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "201":
          description: message
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register a new user
      tags:
      - users
  /videos:
    post:
      consumes:
      - application/json
      description: Creates a new video record in the system
      parameters:
      - description: Video data
        in: body
        name: video
        required: true
        schema:
          $ref: '#/definitions/entity.Video'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Add a new video
      tags:
      - Videos
  /videos/{video_id}:
    delete:
      description: Deletes a video by its ID from the system
      parameters:
      - description: ID of the video
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete a video
      tags:
      - Videos
    get:
      description: Fetches a video by its ID and generates presigned URLs for the
        video and image
      parameters:
      - description: ID of the video
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: video, video_url, image_url
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get video by ID
      tags:
      - Videos
  /videos/{video_id}/download-url/image:
    get:
      description: Generates a presigned URL to download an image (e.g., thumbnail)
        from S3
      parameters:
      - description: ID of the video file
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: image_download_url
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned download URL for an image
      tags:
      - Videos
  /videos/{video_id}/download-url/video:
    get:
      description: Generates a presigned URL to download a video file from S3
      parameters:
      - description: ID of the video file
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: video_download_url
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned download URL for a video
      tags:
      - Videos
  /videos/{video_id}/status:
    get:
      consumes:
      - application/json
      description: Retrieve the status of a specific video by its ID
      parameters:
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.StatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get the status of a video
      tags:
      - Videos
    put:
      consumes:
      - application/json
      description: Update the status of a specific video by its ID
      parameters:
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: integer
      - description: New status
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateVideoStatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update the status of a video
      tags:
      - Videos
  /videos/generate-upload-url/image:
    post:
      description: Generates a presigned URL to upload an image (e.g., thumbnail)
        to S3
      parameters:
      - description: Name of the image file
        in: query
        name: file_name
        required: true
        type: string
      - description: Type of the image file (e.g., image/jpeg)
        in: query
        name: file_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: upload_url
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned upload URL for an image
      tags:
      - Videos
  /videos/generate-upload-url/video:
    post:
      description: Generates a presigned URL to upload a video file to S3
      parameters:
      - description: Name of the video file
        in: query
        name: file_name
        required: true
        type: string
      - description: Type of the video file (e.g., video/mp4)
        in: query
        name: file_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: upload_url
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Generate presigned upload URL for a video
      tags:
      - Videos
  /videos/user/{user_id}:
    get:
      description: Fetches all videos for a specific user along with presigned image
        URLs
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: videos, frames
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List videos by user ID
      tags:
      - Videos
swagger: "2.0"
