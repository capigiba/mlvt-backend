// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"database/sql"
	"mlvt/internal/handler/rest/v1"
	"mlvt/internal/infra/aws"
	"mlvt/internal/pkg/middleware"
	"mlvt/internal/repo"
	"mlvt/internal/router"
	"mlvt/internal/service"
)

// Injectors from wire.go:

func InitializeApp(db *sql.DB, s3Client *aws.S3Client) (*router.AppRouter, error) {
	userRepo := repo.NewUserRepo(db)
	string2 := _wireStringValue
	authService := service.NewAuthService(userRepo, string2)
	userService := service.NewUserService(userRepo, authService)
	userController := handler.NewUserController(userService)
	videoRepo := repo.NewVideoRepo(db)
	videoService := service.NewVideoService(s3Client, videoRepo)
	videoController := handler.NewVideoController(videoService)
	transcriptionRepo := repo.NewTranscriptionRepository(db)
	transcriptionService := service.NewTranscriptionService(transcriptionRepo, s3Client, videoRepo)
	transcriptionController := handler.NewTranscriptionController(transcriptionService)
	authUserMiddleware := middleware.NewAuthUserMiddleware(authService)
	swaggerRouter := router.NewSwaggerRouter()
	appRouter := router.NewAppRouter(userController, videoController, transcriptionController, authUserMiddleware, swaggerRouter)
	return appRouter, nil
}

var (
	_wireStringValue = service.SecretKey
)
